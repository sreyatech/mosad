{"version":3,"sources":["common/apis/MovieApi.js","common/apis/MovieApiKey.js","features/movies/movieSlice.js","component/movieCard/MovieCard.js","common/settings.js","component/movieListing/MovieListing.js","component/home/Home.js","component/movieDetail/MovieDetail.js","component/pageNotFound/PageNotFound.js","images/h1.svg","component/header/Header.js","component/footer/Footer.js","App.js","features/store.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","APIKey","fetchAsyncMovies","createAsyncThunk","term","a","MovieApi","get","response","data","fetchAsyncShows","fetchAsyncMoviesOrShowDetail","id","movieSlice","createSlice","name","initialState","movies","shows","selectMovieOrShow","reducers","removeSelectedMovieOrShow","state","extraReducers","pending","console","log","fulfilled","payload","rejected","actions","getAllMovies","getAllShows","getSelectedMovieOrShow","MovieCard","props","className","to","imdbID","src","Poster","alt","Title","Year","Settings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","MovieListing","renderMovies","renderShows","useSelector","Response","Search","map","movie","index","Error","style","Home","dispatch","useDispatch","useEffect","MovieDetail","useParams","Object","keys","length","imdbRating","imdbVotes","Runtime","Plot","Director","Actors","Genre","Language","Awards","PageNotFound","Header","useState","setTerm","useHistory","onSubmit","e","preventDefault","alert","window","location","reload","type","value","placeholder","onChange","target","user","Footer","App","path","exact","component","store","configureStore","reducer","moviesReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d2d5e7b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL : \"https://www.omdbapi.com/\", \r\n});","export const APIKey = \"8dd79383\"; ","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport MovieApi from '../../common/apis/MovieApi'\r\nimport {APIKey} from '../../common/apis/MovieApiKey'\r\n\r\nexport const fetchAsyncMovies = createAsyncThunk('movies/fetchAsyncMovies', async(term)=>{\r\n\r\n    const response = await MovieApi.get(`?apikey=${APIKey}&s=${term}&type=movie`)\r\n      return response.data;\r\n})\r\n\r\nexport const fetchAsyncShows = createAsyncThunk('movies/fetchAsyncShows', async(term)=>{\r\n\r\n    const response = await MovieApi.get(`?apikey=${APIKey}&s=${term}&type=series`)\r\n      return response.data;\r\n})\r\n\r\nexport const fetchAsyncMoviesOrShowDetail = createAsyncThunk('movies/fetchAsyncMoviesOrShowDetail', async(id)=>{\r\n    const response = await MovieApi.get(`?apikey=${APIKey}&i=${id}&Plot=full`)\r\n      return response.data;\r\n})\r\n\r\nconst initialState = {\r\n    movies : {},\r\n    shows : {},\r\n    selectMovieOrShow : {},\r\n}\r\n\r\nconst movieSlice = createSlice({\r\n    name : \"movies\",\r\n    initialState,\r\n    reducers:{\r\n        removeSelectedMovieOrShow : (state)=>{\r\n            state.selectMovieOrShow = {};\r\n        }\r\n    },\r\n    extraReducers : {\r\n        [fetchAsyncMovies.pending] : ()=>{\r\n            console.log(\"pending\")\r\n        },\r\n        [fetchAsyncMovies.fulfilled] : (state, {payload})=>{\r\n            console.log(\"fetched succesffully!!\");\r\n            return {...state, movies : payload}\r\n        },       \r\n        [fetchAsyncMovies.rejected] : ()=>{\r\n            console.log(\"rejected!!\");\r\n        },\r\n        [fetchAsyncShows.fulfilled] : (state, {payload})=>{\r\n            console.log(\"fetched succesffully!!\");\r\n            return {...state, shows : payload}\r\n        },\r\n        [fetchAsyncMoviesOrShowDetail.fulfilled] : (state, {payload})=>{\r\n            console.log(\"fetched succesffully!!\");\r\n            return {...state, selectMovieOrShow : payload}\r\n        },\r\n    },\r\n});\r\n\r\nexport const {removeSelectedMovieOrShow} = movieSlice.actions;\r\nexport const getAllMovies = (state) => state.movies.movies\r\nexport const getAllShows = (state) => state.movies.shows\r\nexport const getSelectedMovieOrShow = (state) => state.movies.selectMovieOrShow\r\nexport default movieSlice.reducer;","import React from 'react';\r\nimport './MovieCard.scss'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst MovieCard = (props) => {\r\n\r\nconst {data } = props;\r\n\r\nreturn (\r\n<>\r\n    <div className=\"card-item\">\r\n        <Link to={`/movie/${data.imdbID}`}>\r\n        <div className=\"card-inner\">\r\n        <div className=\"card-top\">\r\n            <img src={data.Poster} alt={data.Title} />\r\n        </div>\r\n        <div className=\"card-bottom\">\r\n            <div className=\"card-info\">\r\n                <h4>{data.Title}</h4>\r\n                <p>{data.Year}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </Link>\r\n    </div>\r\n</>\r\n);\r\n};\r\n\r\nexport default MovieCard;","export const Settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 3,\r\n        responsive: [\r\n            {\r\n              breakpoint: 1500,\r\n              settings: {\r\n                slidesToShow: 5,\r\n                slidesToScroll: 4,\r\n                infinite: true,\r\n                dots: false\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 1300,\r\n              settings: {\r\n                slidesToShow: 4,\r\n                slidesToScroll: 3,\r\n                infinite: true,\r\n                dots: false\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 600,\r\n              settings: {\r\n                slidesToShow: 2,\r\n                slidesToScroll: 2,\r\n                initialSlide: 2\r\n              }\r\n            },\r\n            {\r\n              breakpoint: 480,\r\n              settings: {\r\n                slidesToShow: 1,\r\n                slidesToScroll: 1\r\n              }\r\n            }\r\n          ]\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getAllMovies, getAllShows } from '../../features/movies/movieSlice';\r\nimport MovieCard from '../movieCard/MovieCard'\r\nimport './MovieListing.scss'\r\nimport Slider from 'react-slick';\r\nimport { Settings } from '../../common/settings';\r\n\r\nconst MovieListing = () => {\r\n\r\n   \r\n\r\n    const movies = useSelector(getAllMovies)\r\n    const shows = useSelector(getAllShows)\r\n\r\n    let renderMovies, renderShows = \"\";\r\n    \r\n    renderMovies = movies.Response === \"True\" ? (\r\n        movies.Search.map((movie,index)=>(\r\n            <MovieCard key={index} data={movie} />\r\n        ))\r\n    ) : (\r\n    <div className= \"movies-error\">\r\n    <h3>{movies.Error}</h3>\r\n    </div>\r\n    )\r\n    \r\n    renderShows = shows.Response === \"True\" ? (\r\n        shows.Search.map((movie,index)=>(\r\n            <MovieCard key={index} data={movie} />\r\n        ))\r\n    ) : (\r\n    <div className= \"shows-error\">\r\n    <h3 style={{\r\n        'color' : 'black'\r\n    }}>{shows.Error}</h3>\r\n    </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"movie-wrapper\">\r\n            <div className=\"movie-list\">\r\n                <h2>Movies</h2>\r\n                <div className=\"movie-container\">\r\n                    <Slider {...Settings}>{renderMovies}</Slider>\r\n                </div>\r\n            </div>\r\n            <div className=\"shows-list\">\r\n                <h2>Shows</h2>\r\n                <div className=\"movie-container\">\r\n                    <Slider {...Settings}>{renderShows}</Slider>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieListing;","import React, { useEffect } from 'react';\r\nimport './Home.scss'\r\nimport MovieListing from '../movieListing/MovieListing'\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchAsyncMovies, fetchAsyncShows } from '../../features/movies/movieSlice';\r\n\r\nconst Home = () => { \r\n  const dispatch = useDispatch();\r\n  const movieText = \"Harry\";\r\n  const showText = \"Friends\";\r\n\r\nuseEffect(()=>{\r\n  dispatch(fetchAsyncMovies(movieText))\r\n  dispatch(fetchAsyncShows(showText))\r\n},[dispatch])\r\n\r\n    return (\r\n        <>\r\n         <div className=\"banner-img\"></div>\r\n         <MovieListing />\r\n        </>\r\n    );\r\n}; \r\n\r\nexport default Home;","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {fetchAsyncMoviesOrShowDetail, getSelectedMovieOrShow, removeSelectedMovieOrShow} from '../../features/movies/movieSlice'\r\nimport './MovieDetail.scss'\r\n\r\nconst MovieDetail = () => {\r\n\r\nconst {imdbID} = useParams();\r\nconst dispatch = useDispatch()\r\nconst data = useSelector(getSelectedMovieOrShow);\r\nconsole.log(data);\r\nuseEffect(()=>{\r\n    dispatch(fetchAsyncMoviesOrShowDetail(imdbID))\r\n    return ()=>{\r\n        dispatch(removeSelectedMovieOrShow());\r\n    }\r\n},[dispatch, imdbID])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"movie-section\">\r\n        {Object.keys(data).length === 0 ? (<div>...Loading</div>) : (\r\n        <>\r\n            <div className=\"section-left\">\r\n                <div className=\"movie-title\">{data.Title}</div>\r\n                <div className=\"movie-rating\">\r\n                    <span>\r\n                        IMDB Rating <i className=\"fa fa-star\"></i> : {data.imdbRating}\r\n                    </span>                    \r\n                    <span>\r\n                        IMDB Votes <i className=\"fa fa-thumbs-up\"></i> : {data.imdbVotes}\r\n                    </span>\r\n                    <span>\r\n                        Runtime <i className=\"fa fa-film\"></i> : {data.Runtime}\r\n                    </span>\r\n                    <span>\r\n                        Year <i className=\"fa fa-calendar\"></i> : {data.Year}\r\n                    </span>\r\n                </div>\r\n                <div className=\"movie-plot\">{data.Plot}</div>\r\n                <div className=\"movie-info\">\r\n                    <div>\r\n                        <span>Director</span>\r\n                        <span>{data.Director}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Stars</span>\r\n                        <span>{data.Actors}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Genres</span>\r\n                        <span>{data.Genre}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Languages</span>\r\n                        <span>{data.Language}</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>Awards</span>\r\n                        <span>{data.Awards}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"section-right\">\r\n                <img src={data.Poster} alt={data.Title} />\r\n            </div>\r\n            </>\r\n            )}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MovieDetail;","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            PageNotFound\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;","export default __webpack_public_path__ + \"static/media/h1.1d6b340c.svg\";","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { fetchAsyncMovies, fetchAsyncShows } from '../../features/movies/movieSlice';\r\nimport user from '../../images/h1.svg'\r\nimport './Header.scss'\r\n\r\n\r\nconst Header = () => {\r\n    const [term, setTerm] = useState(\"\")\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const submitHandler = (e)=>{\r\n        e.preventDefault();\r\n        if(term === \"\"){\r\n         alert(\"please enter search term...\")\r\n            window.location.reload();\r\n        }\r\n        dispatch(fetchAsyncMovies(term))\r\n        dispatch(fetchAsyncShows(term))\r\n        setTerm(\"\")\r\n    }\r\nreturn (\r\n<>\r\n    <div className=\"header\">\r\n\r\n        <div className=\"logo\">\r\n            <Link to=\"/\">Mosad </Link>\r\n        </div>\r\n        <div className=\"search-bar\">\r\n            <form onSubmit={submitHandler}>\r\n                <input type=\"text\" name=\"\" value={term} placeholder=\"Search Movies or Shows\" onChange={(e)=>setTerm(e.target.value)} />\r\n                <button type=\"submit\"><i className=\"fa fa-search\"></i></button>\r\n            </form>\r\n        </div>\r\n        <div className=\"user-image\">\r\n            <img src={user} alt=\"user\" />\r\n        </div>\r\n    </div>\r\n</>\r\n);\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.scss'\r\n\r\nconst Footer = () => {\r\nreturn (\r\n<>\r\n    <div className=\"footer\">\r\n        <div>Mosad</div>\r\n        <div>©2021, Movie, Inc. or its affiliating</div>\r\n    </div>\r\n</>\r\n);\r\n}; \r\n\r\nexport default Footer;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport './App.scss';\nimport Home from './component/home/Home'\nimport MovieDetail from './component/movieDetail/MovieDetail'\nimport PageNotFound from './component/pageNotFound/PageNotFound'\nimport Header from './component/header/Header'\nimport Footer from './component/footer/Footer'\n\nfunction App() {\nreturn (\n<div className=\"App\">\n  <Router>\n    <Header />\n    <div className=\"container\">\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/movie/:imdbID\" component={MovieDetail} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </div>\n    <Footer />\n  </Router>\n</div>\n);\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport moviesReducer from './movies/movieSlice';\n\nexport const store = configureStore({\n  reducer: {\n    movies: moviesReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './features/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}